[{"C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\index.js":"1","C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\reportWebVitals.js":"2","C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\App.js":"3","C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\Components\\MadlibsComponent.js":"4","C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\Components\\HomeScreenComponent.js":"5","C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\Components\\FilmsComponent.js":"6","C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\shared\\filmTitles.js":"7","C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\shared\\ComedyTitles.js":"8","C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\Components\\KeyBoardComponent.js":"9","C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\Components\\InnerLibComponent.js":"10","C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\shared\\DramaTitles.js":"11","C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\Components\\MusicComponent.js":"12","C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\shared\\RapTitles.js":"13","C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\shared\\RockTitles.js":"14"},{"size":639,"mtime":1606964551527,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1606962158024,"results":"17","hashOfConfig":"16"},{"size":372,"mtime":1606963370652,"results":"18","hashOfConfig":"16"},{"size":699,"mtime":1609990726158,"results":"19","hashOfConfig":"16"},{"size":1087,"mtime":1610079371132,"results":"20","hashOfConfig":"16"},{"size":11063,"mtime":1609991388080,"results":"21","hashOfConfig":"16"},{"size":730,"mtime":1607228317517,"results":"22","hashOfConfig":"16"},{"size":8444,"mtime":1609989794782,"results":"23","hashOfConfig":"16"},{"size":3461,"mtime":1609563272520,"results":"24","hashOfConfig":"16"},{"size":1630,"mtime":1609545097170,"results":"25","hashOfConfig":"16"},{"size":8449,"mtime":1609990796766,"results":"26","hashOfConfig":"16"},{"size":11020,"mtime":1609992076892,"results":"27","hashOfConfig":"16"},{"size":3739,"mtime":1610076393905,"results":"28","hashOfConfig":"16"},{"size":3279,"mtime":1610087290659,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"71z2xd",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\index.js",[],["62","63"],"C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\reportWebVitals.js",[],"C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\App.js",[],"C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\Components\\MadlibsComponent.js",[],"C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\Components\\HomeScreenComponent.js",[],"C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\Components\\FilmsComponent.js",["64","65"],"import React, { Component } from 'react';\r\nimport { Container, Card, Col, Row, CardImg, CardImgOverlay, CardTitle, Button } from 'reactstrap';\r\nimport { Comedy } from '../shared/ComedyTitles';\r\nimport {Drama} from '../shared/DramaTitles'\r\n//Go to the Single Page Application in the React Course\r\nclass Films extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.showFilmCom = this.showFilmCom.bind(this);\r\n        this.showFilmDrama = this.showFilmDrama.bind(this);\r\n        this.enterLetters = this.enterLetters.bind(this);\r\n        this.nextBtn = this.nextBtn.bind(this);\r\n        this.backBtn = this.backBtn.bind(this);\r\n        this.prevBtn = this.prevBtn.bind(this);\r\n        this.doneBtn = this.doneBtn.bind(this);\r\n        this.state = {\r\n            currentFilm: 0,\r\n            currentPrompt: 0,\r\n            disabled: true,\r\n            nextDisabled: true,\r\n            prevDisabled: true,\r\n            comedy: Comedy,\r\n            drama: Drama,\r\n            genre: Comedy\r\n        };\r\n    }\r\n\r\n    showFilmCom(x) {\r\n        document.querySelector('.filmScreenDisplay').style.display = \"none\";\r\n        document.querySelector('.Choice-Icon').style.display = \"inline-block\";\r\n        this.setState({\r\n            currentFilm: x,\r\n            genre:Comedy\r\n        });\r\n    }\r\n    showFilmDrama(x) {\r\n        document.querySelector('.filmScreenDisplay').style.display = \"none\";\r\n        document.querySelector('.Choice-Icon').style.display = \"inline-block\";\r\n        this.setState({\r\n            currentFilm: x,\r\n            genre:Drama\r\n        });\r\n    }\r\n\r\n\r\n    enterLetters(x) {\r\n        var madlibsText = document.querySelector('.madlib-text');\r\n\r\n        this.state.genre[this.state.currentFilm].currentWord.push(x);\r\n        madlibsText.innerHTML = this.state.genre[this.state.currentFilm].currentWord.join('');\r\n\r\n        if (this.state.genre[this.state.currentFilm].currentWord.length >= 1) {\r\n            this.setState({\r\n                nextDisabled: false\r\n            })\r\n        }\r\n    }\r\n    prevBtn() {\r\n        this.setState({\r\n            nextDisabled: true,\r\n            currentPrompt: this.state.currentPrompt - 1,\r\n            \r\n        })\r\n        this.state.genre[this.state.currentFilm].currentWord.length = 0;\r\n        this.state.genre[this.state.currentFilm].words.pop();\r\n        if (this.state.genre[this.state.currentFilm].words.length <= 1) {\r\n            this.setState({\r\n                prevDisabled: true\r\n            })\r\n        }\r\n    }\r\n    backBtn() {\r\n        this.state.genre[this.state.currentFilm].currentWord.pop();\r\n        document.querySelector('.madlib-text').innerHTML = this.state.genre[this.state.currentFilm].currentWord.join('');\r\n    }\r\n    nextBtn() {\r\n        this.setState({\r\n            nextDisabled: true,\r\n            prevDisabled: false\r\n        })\r\n        this.state.genre[this.state.currentFilm].words.push(this.state.genre[this.state.currentFilm].currentWord.join(''));\r\n\r\n\r\n        if (this.state.currentPrompt < this.state.genre[this.state.currentFilm].speech.length - 1) {\r\n            this.setState({\r\n                currentPrompt: this.state.currentPrompt + 1\r\n            })\r\n\r\n            this.state.genre[this.state.currentFilm].currentWord.length = 0;\r\n            document.querySelector('.madlib-text').innerHTML = '';\r\n\r\n        }\r\n        else {\r\n            this.setState({\r\n                disabled: !this.state.disabled\r\n            })\r\n            document.querySelector('.next-button').style.display = \"none\";\r\n            document.querySelector('.done-button').style.display = \"inline\";\r\n            alert(this.state.genre[this.state.currentFilm].words.join(''));\r\n        }\r\n    }\r\n    doneBtn() {\r\n        var complete =this.state.genre[this.state.currentFilm].complete;\r\n        document.querySelector('.Choice-Icon').style.display = \"none\";\r\n        document.querySelector('.Completed-MadLib').style.display = \"inline-block\";\r\n        for (var i = 0; i < this.state.genre[this.state.currentFilm].words.length; i++) {\r\n\r\n            document.querySelector('.completed-text').append(complete[i] + ' ' + this.state.genre[this.state.currentFilm].words[i] + ' ');\r\n        }\r\n        document.querySelector('.completed-text').append(complete[(complete.length - 1)]);\r\n    }\r\n\r\n    render() {\r\n        const showComedy = this.state.comedy.map(film => {\r\n            return (\r\n                <Col xs={6} sm={6} md={3} className=\"full-display-item\">\r\n\r\n                    <Card className=\"madlib-card\" onClick={() => this.showFilmCom(film.id)}>\r\n                        <CardImg width=\"10%\" src={film.image} alt={film.title} />\r\n                        <CardImgOverlay>\r\n                            <CardTitle className=\"title-specific\">{film.title}</CardTitle>\r\n                        </CardImgOverlay>\r\n                    </Card>\r\n                    <div className=\"bottom-text\">\r\n                        <p>{film.subhead}</p>\r\n                        <p>{film.actor}</p>\r\n                    </div>\r\n                </Col>\r\n            );\r\n        });\r\n        const showDrama = this.state.drama.map(film => {\r\n            return (\r\n                <Col xs={6} sm={6} md={3} className=\"full-display-item\">\r\n\r\n                    <Card className=\"madlib-card\" onClick={() => this.showFilmDrama(film.id)}>\r\n                        <CardImg width=\"10%\" src={film.image} alt={film.title} />\r\n                        <CardImgOverlay>\r\n                            <CardTitle className=\"title-specific\">{film.title}</CardTitle>\r\n                        </CardImgOverlay>\r\n                    </Card>\r\n                    <div className=\"bottom-text\">\r\n                        <p>{film.subhead}</p>\r\n                        <p>{film.actor}</p>\r\n                    </div>\r\n                </Col>\r\n            );\r\n        });\r\n        return (\r\n            <React.Fragment>\r\n                <Container className=\"filmScreenDisplay\">\r\n                    <Row>\r\n                        <Col xs={12} ><h3 className=\"category-title\">Comedy</h3></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {showComedy}\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} ><h3 className=\"category-title\">Drama</h3></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {showDrama}\r\n                    </Row>\r\n                </Container>\r\n                <Container className=\"Choice-Icon\">\r\n                    <Row>\r\n                        <Col>\r\n                            <h2>{this.state.genre[this.state.currentFilm].speech[this.state.currentPrompt]}</h2>\r\n                            <div className=\"madlib-text\"><h3> </h3></div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <div class=\"keyboard\">\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('Q') }}>Q</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('W') }}>W</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('E') }}>E</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('R') }}>R</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('T') }}>T</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('Y') }}>Y</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('U') }}>U</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('I') }}>I</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('O') }}>O</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('P') }}>P</Button><br></br>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('A') }}>A</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('S') }}>S</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('D') }}>D</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('F') }}>F</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('G') }}>G</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('H') }}>H</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('J') }}>J</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('K') }}>K</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('L') }}>L</Button><br></br>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('Z') }}>Z</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('X') }}>X</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('C') }}>C</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('V') }}>V</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('B') }}>B</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('N') }}>N</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('M') }}>M</Button><br></br>\r\n                            <Button disabled={this.state.nextDisabled} onClick={() => { this.enterLetters(' ') }}></Button>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <Button disabled={this.state.prevDisabled} onClick={this.prevBtn} >Prev</Button>\r\n                        <Button disabled={this.state.nextDisabled} onClick={this.backBtn} >Back</Button>\r\n                        <Button className=\"next-button\" disabled={this.state.nextDisabled} onClick={this.nextBtn} >Next</Button>\r\n                        <Button className=\"done-button\" onClick={this.doneBtn}>Done</Button>\r\n                    </Row>\r\n\r\n                </Container>\r\n                <Container className=\"Completed-MadLib\">\r\n                    <p className=\"completed-text\">\r\n                    </p>\r\n                </Container>\r\n            </React.Fragment>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Films;","C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\shared\\filmTitles.js",[],"C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\shared\\ComedyTitles.js",[],"C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\Components\\KeyBoardComponent.js",["66","67"],"C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\Components\\InnerLibComponent.js",[],["68","69"],"C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\shared\\DramaTitles.js",[],"C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\Components\\MusicComponent.js",["70","71"],"import React, { Component } from 'react';\r\nimport { Container, Card, Col, Row, CardImg, CardImgOverlay, CardTitle, Button } from 'reactstrap';\r\nimport { Rap } from '../shared/RapTitles';\r\nimport {Rock} from '../shared/RockTitles'\r\n//Go to the Single Page Application in the React Course\r\nclass Music extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.showSongRap = this.showSongRap.bind(this);\r\n        this.showSongRock = this.showSongRock.bind(this);\r\n        this.enterLetters = this.enterLetters.bind(this);\r\n        this.nextBtn = this.nextBtn.bind(this);\r\n        this.backBtn = this.backBtn.bind(this);\r\n        this.prevBtn = this.prevBtn.bind(this);\r\n        this.doneBtn = this.doneBtn.bind(this);\r\n        this.state = {\r\n            currentSong: 0,\r\n            currentPrompt: 0,\r\n            disabled: true,\r\n            nextDisabled: true,\r\n            prevDisabled: true,\r\n            rap: Rap,\r\n            rock: Rock,\r\n            genre: Rap\r\n        };\r\n    }\r\n\r\n    showSongRap(x) {\r\n        document.querySelector('.filmScreenDisplay').style.display = \"none\";\r\n        document.querySelector('.Choice-Icon').style.display = \"inline-block\";\r\n        this.setState({\r\n            currentSong: x,\r\n            genre:Rap\r\n        });\r\n    }\r\n    showSongRock(x) {\r\n        document.querySelector('.filmScreenDisplay').style.display = \"none\";\r\n        document.querySelector('.Choice-Icon').style.display = \"inline-block\";\r\n        this.setState({\r\n            currentSong: x,\r\n            genre:Rock\r\n        });\r\n    }\r\n\r\n\r\n    enterLetters(x) {\r\n        var madlibsText = document.querySelector('.madlib-text');\r\n\r\n        this.state.genre[this.state.currentSong].currentWord.push(x);\r\n        madlibsText.innerHTML = this.state.genre[this.state.currentSong].currentWord.join('');\r\n\r\n        if (this.state.genre[this.state.currentSong].currentWord.length >= 1) {\r\n            this.setState({\r\n                nextDisabled: false\r\n            })\r\n        }\r\n    }\r\n    prevBtn() {\r\n        this.setState({\r\n            nextDisabled: true,\r\n            currentPrompt: this.state.currentPrompt - 1,\r\n            \r\n        })\r\n        this.state.genre[this.state.currentSong].currentWord.length = 0;\r\n        this.state.genre[this.state.currentSong].words.pop();\r\n        if (this.state.genre[this.state.currentSong].words.length <= 1) {\r\n            this.setState({\r\n                prevDisabled: true\r\n            })\r\n        }\r\n    }\r\n    backBtn() {\r\n        this.state.genre[this.state.currentSong].currentWord.pop();\r\n        document.querySelector('.madlib-text').innerHTML = this.state.genre[this.state.currentSong].currentWord.join('');\r\n    }\r\n    nextBtn() {\r\n        this.setState({\r\n            nextDisabled: true,\r\n            prevDisabled: false\r\n        })\r\n        this.state.genre[this.state.currentSong].words.push(this.state.genre[this.state.currentSong].currentWord.join(''));\r\n\r\n\r\n        if (this.state.currentPrompt < this.state.genre[this.state.currentSong].speech.length - 1) {\r\n            this.setState({\r\n                currentPrompt: this.state.currentPrompt + 1\r\n            })\r\n\r\n            this.state.genre[this.state.currentSong].currentWord.length = 0;\r\n            document.querySelector('.madlib-text').innerHTML = '';\r\n\r\n        }\r\n        else {\r\n            this.setState({\r\n                disabled: !this.state.disabled\r\n            })\r\n            document.querySelector('.next-button').style.display = \"none\";\r\n            document.querySelector('.done-button').style.display = \"inline\";\r\n            alert(this.state.genre[this.state.currentSong].words.join(''));\r\n        }\r\n    }\r\n    doneBtn() {\r\n        var complete =this.state.genre[this.state.currentSong].complete;\r\n        document.querySelector('.Choice-Icon').style.display = \"none\";\r\n        document.querySelector('.Completed-MadLib').style.display = \"inline-block\";\r\n        for (var i = 0; i < this.state.genre[this.state.currentSong].words.length; i++) {\r\n\r\n            document.querySelector('.completed-text').append(complete[i] + ' ' + this.state.genre[this.state.currentSong].words[i] + ' ');\r\n        }\r\n        document.querySelector('.completed-text').append(complete[(complete.length - 1)]);\r\n    }\r\n\r\n    render() {\r\n        const showRap = this.state.rap.map(song => {\r\n            return (\r\n                <Col xs={6} sm={6} md={3} className=\"full-display-item\">\r\n\r\n                    <Card className=\"madlib-card\" onClick={() => this.showSongRap(song.id)}>\r\n                        <CardImg width=\"10%\" src={song.image} alt={song.title} />\r\n                        <CardImgOverlay>\r\n                            <CardTitle className=\"title-specific\">{song.title}</CardTitle>\r\n                        </CardImgOverlay>\r\n                    </Card>\r\n                    <div className=\"bottom-text\">\r\n                        <p>{song.subhead}</p>\r\n                        <p>{song.actor}</p>\r\n                    </div>\r\n                </Col>\r\n            );\r\n        });\r\n        const showRock = this.state.rock.map(song => {\r\n            return (\r\n                <Col xs={6} sm={6} md={3} className=\"full-display-item\">\r\n\r\n                    <Card className=\"madlib-card\" onClick={() => this.showSongRock(song.id)}>\r\n                        <CardImg width=\"10%\" src={song.image} alt={song.title} />\r\n                        <CardImgOverlay>\r\n                            <CardTitle className=\"title-specific\">{song.title}</CardTitle>\r\n                        </CardImgOverlay>\r\n                    </Card>\r\n                    <div className=\"bottom-text\">\r\n                        <p>{song.subhead}</p>\r\n                        <p>{song.actor}</p>\r\n                    </div>\r\n                </Col>\r\n            );\r\n        });\r\n        return (\r\n            <React.Fragment>\r\n                <Container className=\"filmScreenDisplay\">\r\n                    <Row>\r\n                        <Col xs={12} ><h3 className=\"category-title\">Rap</h3></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {showRap}\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} ><h3 className=\"category-title\">Rock</h3></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {showRock}\r\n                    </Row>\r\n                </Container>\r\n                <Container className=\"Choice-Icon\">\r\n                    <Row>\r\n                        <Col>\r\n                            <h2>{this.state.genre[this.state.currentSong].speech[this.state.currentPrompt]}</h2>\r\n                            <div className=\"madlib-text\"><h3> </h3></div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <div class=\"keyboard\">\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('Q') }}>Q</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('W') }}>W</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('E') }}>E</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('R') }}>R</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('T') }}>T</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('Y') }}>Y</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('U') }}>U</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('I') }}>I</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('O') }}>O</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('P') }}>P</Button><br></br>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('A') }}>A</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('S') }}>S</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('D') }}>D</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('F') }}>F</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('G') }}>G</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('H') }}>H</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('J') }}>J</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('K') }}>K</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('L') }}>L</Button><br></br>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('Z') }}>Z</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('X') }}>X</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('C') }}>C</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('V') }}>V</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('B') }}>B</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('N') }}>N</Button>\r\n                            <Button disabled={!this.state.disabled} onClick={() => { this.enterLetters('M') }}>M</Button><br></br>\r\n                            <Button disabled={this.state.nextDisabled} onClick={() => { this.enterLetters(' ') }}></Button>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <Button disabled={this.state.prevDisabled} onClick={this.prevBtn} >Prev</Button>\r\n                        <Button disabled={this.state.nextDisabled} onClick={this.backBtn} >Back</Button>\r\n                        <Button className=\"next-button\" disabled={this.state.nextDisabled} onClick={this.nextBtn} >Next</Button>\r\n                        <Button className=\"done-button\" onClick={this.doneBtn}>Done</Button>\r\n                    </Row>\r\n\r\n                </Container>\r\n                <Container className=\"Completed-MadLib\">\r\n                    <p className=\"completed-text\">\r\n                    </p>\r\n                </Container>\r\n            </React.Fragment>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Music;","C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\shared\\RapTitles.js",[],"C:\\Users\\wllpt\\Desktop\\design\\madlibs\\src\\shared\\RockTitles.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":64,"column":9,"nodeType":"78","endLine":64,"endColumn":61},{"ruleId":"76","severity":1,"message":"77","line":89,"column":13,"nodeType":"78","endLine":89,"endColumn":65},{"ruleId":"79","severity":1,"message":"80","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"83","line":4,"column":7,"nodeType":"81","messageId":"82","endLine":4,"endColumn":15},{"ruleId":"72","replacedBy":"84"},{"ruleId":"74","replacedBy":"85"},{"ruleId":"76","severity":1,"message":"77","line":64,"column":9,"nodeType":"78","endLine":64,"endColumn":61},{"ruleId":"76","severity":1,"message":"77","line":89,"column":13,"nodeType":"78","endLine":89,"endColumn":65},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'KeyBoard' is assigned a value but never used.",["86"],["87"],"no-global-assign","no-unsafe-negation"]